{"version":3,"sources":["components/Cards/style.js","components/Cards/index.jsx","components/Chart/style.js","services/api.js","components/Chart/index.jsx","components/CountryPicker/style.js","components/CountryPicker/index.jsx","styles/index.js","App.js","index.js"],"names":["Container","styled","div","Cards","data","confirmed","recovered","deaths","lastUpdate","Grid","container","spacing","justify","item","component","Card","xs","md","className","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","format","Date","url","fetchData","country","a","changeURL","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","console","log","lineChart","length","labels","datasets","label","borderColor","fill","backgorundColor","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","responseApi","FormControl","NativeSelect","onChange","i","key","GlobalStyle","createGlobalStyle","App","state","target","fetchedData","setState","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1ad4cbd.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 50px 0;\n\n  .card {\n    margin: 0 2% !important;\n    margin-bottom: 4% !important;\n  }\n  .title {\n    font-weight: bold !important;\n  }\n  .details {\n    font-size: 12px !important;\n    padding: 8px 0 !important;\n  }\n\n  .infected {\n    border-bottom: 10px solid rgba(0, 0, 255, 0.5);\n  }\n  .recovered {\n    border-bottom: 10px solid rgba(0, 255, 0, 0.5);\n  }\n  .deaths {\n    border-bottom: 10px solid rgba(255, 0, 0, 0.5);\n  }\n`;\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport { format } from 'date-fns';\n\nimport { Container } from './style';\n\nexport const Cards = ({\n  data: { confirmed, recovered, deaths, lastUpdate },\n}) => {\n  if (!confirmed) {\n    return '';\n  } else {\n    return (\n      <Container>\n        <Grid container spacing={3} justify=\"center\">\n          <Grid item component={Card} xs={12} md={3} className=\"card infected\">\n            <CardContent>\n              <Typography color=\"textSecondary\" className=\"title\" gutterBottom>\n                {' '}\n                Infectados\n              </Typography>\n              <Typography variant=\"h5\">\n                <CountUp\n                  start={0}\n                  end={confirmed.value}\n                  duration={2.5}\n                  separator=\",\"\n                />\n              </Typography>\n              <Typography color=\"textSecondary\" className=\"details\">\n                {'Última atualização: '}\n                {format(new Date(lastUpdate), 'dd-MM-yyy')}\n              </Typography>\n              <Typography variant=\"body2\">\n                {' '}\n                Número de casos ativos de COVID-19\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item component={Card} xs={12} md={3} className=\"card recovered\">\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom className=\"title\">\n                {' '}\n                Recuperados\n              </Typography>\n              <Typography variant=\"h5\">\n                {' '}\n                <CountUp\n                  start={0}\n                  end={recovered.value}\n                  duration={2.5}\n                  separator=\",\"\n                />\n              </Typography>\n              <Typography color=\"textSecondary\" className=\"details\">\n                {'Última atualização: '}\n                {format(new Date(lastUpdate), 'dd-MM-yyy')}\n              </Typography>\n              <Typography variant=\"body2\">\n                {' '}\n                Número de recuperados ativos de COVID-19\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item component={Card} xs={12} md={3} className=\"card deaths\">\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom className=\"title\">\n                {' '}\n                Mortes\n              </Typography>\n              <Typography variant=\"h5\">\n                {' '}\n                <CountUp\n                  start={0}\n                  end={deaths.value}\n                  duration={2.5}\n                  separator=\",\"\n                />\n              </Typography>\n              <Typography color=\"textSecondary\" className=\"details\">\n                {'Última atualização: '}\n                {format(new Date(lastUpdate), 'dd-MM-yyy')}\n              </Typography>\n              <Typography variant=\"body2\">\n                {' '}\n                Número de óbitos de COVID-19\n              </Typography>\n            </CardContent>\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 85%;\n`;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async country => {\n  let changeURL = url;\n\n  if (country) {\n    changeURL = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeURL);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {}\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedData = data.map(dailyData => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedData;\n  } catch (error) {}\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n\n    return countries.map(country => country.name);\n  } catch (error) {}\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { Container } from './style';\nimport { fetchDailyData } from '../../services/api';\n\nexport const Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchApi();\n  }, []);\n\n  console.log(country);\n\n  const lineChart =\n    dailyData.length !== 0 ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [\n            {\n              data: dailyData.map(({ confirmed }) => confirmed),\n              label: 'Infectados',\n              borderColor: '#3333ff',\n              fill: true,\n            },\n            {\n              data: dailyData.map(({ deaths }) => deaths),\n              label: 'Mortos',\n              borderColor: 'red',\n              backgorundColor: 'rgba(255,0,0,0.5)',\n              fill: true,\n            },\n          ],\n        }}\n      />\n    ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: ['Infectados', 'Recuperados', 'Mortes'],\n        datasets: [\n          {\n            label: 'Pessoas',\n            backgroundColor: [\n              'rgba(0, 0, 255, 0.5)',\n              'rgba(0, 255, 0, 0.5)',\n              'rgba(255, 0, 0, 0.5)',\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Estado atual` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <>\n      <Container>{country ? barChart : lineChart}</Container>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  .form-control {\n    margin-bottom: 30px !important;\n  }\n`;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { FormControl, NativeSelect } from '@material-ui/core';\n\nimport { Container } from './style';\nimport { fetchCountries } from '../../services/api';\n\nexport const CountryPicker = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const responseApi = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    responseApi();\n  }, [setCountries]);\n\n  return (\n    <Container>\n      <FormControl className=\"form-control\">\n        <NativeSelect onChange={handleCountryChange} className=\"formControl\">\n          <option value=\"\">Escolha o país</option>\n          {countries.map((country, i) => (\n            <option key={i} value={country}>\n              {country}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n    </Container>\n  );\n};\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');\n\n  body{\n  background-color: rgb(250,250,250);\n  font-family: Roboto, sans-serif !important;\n\n  }\n\n  .container{\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    flex-direction: column;\n\n  }\n`;\n","import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport { GlobalStyle } from './styles';\nimport { fetchData } from './services/api';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  };\n\n  async componentDidMount() {\n    const data = await fetchData();\n    console.log(data);\n    this.setState({ data });\n  }\n  handleCountryChange = async country => {\n    const fetchedData = await fetchData(country.target.value);\n\n    this.setState({ data: fetchedData, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className=\"container\">\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n\n        <Chart data={data} country={country} />\n        <GlobalStyle />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}